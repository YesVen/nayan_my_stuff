package immutability;

public class ThreadSafeImmutableStringBuffer {
	
	public static void main (String aa[]) {
		
		StringBuffer a = new StringBuffer("myString");
		Thread t1 = new Thread(new Task4(a)); t1.start();
		Thread t2 = new Thread(new Task4(a)); t2.start();
		Thread t3 = new Thread(new Task4(a)); t3.start();
		Thread t4 = new Thread(new Task4(a)); t4.start();
		Thread t5 = new Thread(new Task4(a)); t5.start();
		
		Thread t61 = new Thread(new Task5(a)); t61.start();
		Thread t71 = new Thread(new Task5(a)); t71.start();
		Thread t81 = new Thread(new Task5(a)); t81.start();
		Thread t91 = new Thread(new Task5(a)); t91.start();
		
		Thread t6 = new Thread(new Task4(a)); t6.start();
		Thread t7 = new Thread(new Task4(a)); t7.start();
		Thread t8 = new Thread(new Task4(a)); t8.start();
		Thread t9 = new Thread(new Task4(a)); t9.start();
		Thread t10 = new Thread(new Task4(a)); t10.start();
		Thread t11 = new Thread(new Task4(a)); t11.start();
		Thread t12 = new Thread(new Task4(a)); t12.start();
	}
	
	
}

 class Task4 implements Runnable {
	 StringBuffer a;
	 public Task4(StringBuffer a) {
		 this.a = a;
	 }
	 public void run () {
		 System.out.println("String value is " + a);
	 }
 }
 
 class Task5 implements Runnable {
	 StringBuffer a;
	 public Task5(StringBuffer a) {
		 this.a = a;
	 }
	 public void run () {
		 a = a.append("newStr");
		 System.out.println("String value is " + a);
	 }
 }



